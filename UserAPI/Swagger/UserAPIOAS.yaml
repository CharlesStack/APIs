openapi: 3.0.1
info:
  title: User Management Service API
  description: >
    This document provides a Swagger specification for a User Management Service API.


    Copyright (c) 2019, Charles Stack of Mind2Mobile.  All Rights Reserved


    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
  contact:
    name: Charles Stack
    email: charles.stack@mind2mobil.net
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0

servers:
  - url: 'https://127.0.0.1'
    description: Local Host Development
    variables:
      port:
        enum:
          - '443'
          - '8443'
        default: '8443'

components:
  schemas:

    ErrorResponse:
      description: >-
        The ErrorResponse object provides additional information of a standard response
      type: object
      properties:
        code:
          description: >-
            The particular HTTP response code
          type: integer
          default: 200
        subCode:
          description: >-
            The particular application error code (optional)
          type: integer
          default: 0
        timestamp:
          description: >-
            The date and time the error was generated.
          type: string
          format: date-time
          example: "2019-06-01T10:40:52Z"
        message:
          type: string
          default: ""

    User:
      description: >-
        The User object represents a user account.
      type: object
      properties:
        userId:
          description: >-
            System assigned unique identifier for the user
          type: string
          format: uuid
          example: "1e1c1d23-31e2-44ee-b41a-dd143a06af81"
        userName:
          description: >-
            User assigned name.  By default, it is the email address
          type: string
          example: "jsmith"
        email:
          description: >-
            User's email address
          type: string
          format: email
          example: "user@yourdomain.com"
        firstName:
          description: >-
            User's first name
          type: string
          example: "Joe"
        lastName:
          description: >-
            User's last name
          type: string
          example: "Smith"
        salutation:
          description: >-
            User's salutaton (i.e. Mr, Mrs, Ms, Dr)
          type: string
          example: "Mr"
        phone:
          description: >-
            User's cellphone.
          type: string
          example: "1-215-555-1212"
        password:
          description: >-
            Hash of the user's password.
          type: string
          example: "dkl38dkakldiekdpa8u88334"
        tfaEnabled:
          description: >-
            A read-only flag indicating if Two Factor Authentication is Enabled or Disabled
          type: boolean
          default: false
          example: true
        tfaMethods:
          description: >-
            A read-only array indicating the methods of TFA enabled for this account. It is manipulated by the API only.
          type: array
          items:
            type: string
          example: ["Authenticator","SMS"]
        roles:
          description: >-
            A read-only array indicating the roles the User of this account possesses.
            By default, a newly created User will have the role of "USER".
          type: array
          items:
            type: string
          example: ["USER","ADMIN"]
        status:
          $ref: '#/components/schemas/AccountStatusInfo'


    AccountStatusInfo:
      description: >-
        Describes the current status of an account including suspension info.
      type: object
      properties:
        isActive:
          description: >-
            A read-only flag indicating whether this account is active within the system.
          type: boolean
          default: true
          example: true
        isSuspended:
          description: >-
            A read-only flag indicating whether the account is enabled with in the system.  This is different fromn isActive as it indicates whether an User account has been suspended or not.  An account may be suspended in the event of a too many login attempts, failure to pay (if applicable), etc.
          type: boolean
          default: false
          example: false
        suspendedCode:
          description: >-
            A read-only flag indicating the reason an account was suspended.
            type: integer
            default: false
            example: false
        suspendedReason:
          description: >-
            A read-only message describing why an account was suspended.
            type: string
            default: ""
            example: "Unknown"
        suspendedTS:
          description: >-
            Date and Time when an account was suspended.
          type: string
          format: date-time
          example: "2019-06-01T10:40:52Z"
        unsuspendedTS:
          description: >-
            Date and Time when an account may be unsuspended.
          type: string
          format: date-time
          example: "2019-06-01T11:40:52Z"

    CreateUserRequest:
      description: >-
        The User object sent to create a new user account.
      type: object
      properties:
        userName:
          description: >-
            User assigned name.  By default, it is the email address
          type: string
          example: "jsmith"
        email:
          description: >-
            User's email address
          type: string
          format: email
          example: "user@yourdomain.com"
        firstName:
          description: >-
            User's first name
          type: string
          example: "Joe"
        lastName:
          description: >-
            User's last name
          type: string
          example: "Smith"
        salutation:
          description: >-
            User's salutaton (i.e. Mr, Mrs, Ms, Dr)
          type: string
          example: "Mr"
        phone:
          description: >-
            User's cellphone.
          type: string
          example: "1-215-555-1212"
        password:
          description: >-
            User's password.
          type: string
          example: "p@ssw0rd1"
        tfaEnabled:
          description: >-
            A read-only flag indicating if Two Factor Authentication is Enabled or Disabled
          type: boolean
          default: false
          example: true
        tfaMethods:
          description: >-
            A read-only array indicating the methods of TFA enabled for this account. It is manipulated by the API only.
          type: array
          items:
            type: string
          example: ["Authenticator","SMS"]

    UserLoginRequest:
      description: >-
        The UserLoginRequest object is passed to supply credentials during login.
      type: object
      properties:
        userName:
          description: >-
            This is the User supplied identifier or email address
          type: string
          default: ""
          example: "jsmith"
        password:
          description: >-
            This is the User's Password
          type: string
          format: password
          minLength: 8
          maxLength: 20
          default: ""
          example: "p@ssw0rd1"
        twoFactorCode:
          description: >-
            This is the generated Two Factor Authentication code. This code is created using either an authenticator app or sent by SMS if the useSMS option was enabled.
          type: string
          minLength: 6
          maxLength: 6
          default: ""
          example: "683124"

    UserChangePasswordRequest:
      type: object
      properties:
        userName:
          description: >-
            This is the User's supplied identifier or email address
          type: string
          minLength: 8
          maxLength: 20
          default: ""
          example: "jsmith"
        currentPassword:
          description: >-
            This is the User's Current Password
          type: string
          format: password
          minLength: 8
          maxLength: 20
          default: ""
          example: "p@ssw0rd1"
        newPassword:
          description: >-
            This is the User's New Password
          type: string
          format: password
          minLength: 8
          maxLength: 20
          default: ""
          example: "newP@ssw0rd1"

    UserLoginResponse:
      type: object
      properties:
        id:
          description: >-
            This is the User's unique identifier assigned by the system
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          default: ""
          example: "f21e4e0e-648e-45ad-b105-dfaf305c9e4b"
        userName:
          description: >-
            This is the User supplied id or email address
          type: string
          minLength: 8
          maxLength: 20
          default: ""
          example: "jsmith"
        token:
          description: >-
            This is a token assigned by the system for the current user session.
          type: string
          minLength: 20
          maxLength: 36
          default: ""
          example: "f038be07-36d0-4126-9b48-00ff659c8599"
        expiration:
          description: >-
            The data and time when the session will be closed.
          type: string
          format: date-time
          example: "2019-06-01T10:40:52Z"

    TFAInfoResponse:
      description: >-
        This object describes the TFA info established on the User account.
      type: object
      properties:
        methods:
          description: >-
            The methods configured for Two Factor Authentication.  By default, QRCode will be provided when TFA is enabled.  If the SMS option is configured, this will also be set. Valid values: Authenticator, SMS
          type: array
          items:
            type: string
          default: []
          example: ["Authenticator", "SMS"]
        uri:
          description: >-
            A URI containing the Google Authenticator information for this login
          type: string
          format: url
          example: ""
        image:
          description: >-
            A MIME (Base64) encoded image containing the QR Code for the URL
          type: string
          default: ""
        imageFmt:
          description: >-
            Indicates the format of the image used to hold the QR Code.  This can be (PNG, PDF, BMP, SVG)
          type: string
          minLength: 3
          maxLength: 3
          default: ""
          example: "PDF"


paths:
  '/users':
    post:
      tags:
        - User Management
      summary: Create a new User Account
      description: >-
        Create a new User account.  It requires the APIClientKey and APIClientSecret.  The user will exist within the context of the Client.
      operationId: createUser
      security:
        - APIClientKey: []
        - APIClientSecret: []

      responses:
        '201':
          description: OK
          content:
            'application/json':
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            'application/json':
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            'application/json':
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
        '409':
          description: Duplicate User
          content:
            'application/json':
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'
        '501':
          description: Not Implemented
          content:
            'application/json':
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/User'

      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/User'

